version: "3.8"

services:
  flask-app:
    container_name: flask-app
    build:
      dockerfile: ./Dockerfile
      context: .
    # ports:
    #   - "5000:5000"
    expose:
      - 5000
    volumes:
      - ./:/app
    networks:
      - flask-network
    env_file:
      - .env
    environment:
      - FLASK_ENV=production
    depends_on:
      - flask-db
      - flask-redis
    restart: unless-stopped

  nginx:
    build: ./nginx
    container_name: nginx
    restart: unless-stopped
    networks:
      - flask-network
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./OpenDrive/static:/var/www/html/static
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
      - dhparam:/etc/ssl/certs
    depends_on:
      - flask-app

  # certbot:
  #   image: certbot/certbot
  #   container_name: certbot
  #   volumes:
  #     - certbot-etc:/etc/letsencrypt
  #     - certbot-var:/var/lib/letsencrypt
  #     - web-root:/var/www/html
  #   depends_on:
  #     - nginx
  #   command: certonly --webroot --webroot-path=/var/www/html --email moretti919@gmail.com --agree-tos --no-eff-email --staging -d opendrive.site  -d www.opendrive.site

  # --force-renewal
  flask-db:
    container_name: flask-db
    hostname: flask-db.docker
    image: postgres:13-alpine
    restart: unless-stopped
    ports:
      - 5432:5432
    env_file:
      - .env
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
    networks:
      - flask-network
    volumes:
      - flask-db-data:/var/lib/postgresql/data/pgdata

  worker:
    container_name: flask-worker
    restart: unless-stopped
    build:
      dockerfile: Dockerfile.worker
      context: .
    env_file:
      - .env
    networks:
      - flask-network
    volumes:
      - "./:/app"

  flask-redis:
    container_name: flask-redis
    hostname: flask-redis.docker
    restart: unless-stopped
    build:
      dockerfile: Dockerfile.redis
      context: .
    ports:
      - 6379:6379
    networks:
      - flask-network
    env_file:
      - .env
volumes:
  certbot-etc:
    driver: local
    driver_opts:
      type: none
      device: /etc/letsencrypt
      o: bind
  certbot-var:
    driver: local
    driver_opts:
      type: none
      device: /var/lib/letsencrypt
      o: bind
  dhparam:
    driver: local
    driver_opts:
      type: none
      device: /home/dev/app/dhparam
      o: bind
  flask-db-data:
    name: flask-db-data

networks:
  flask-network:
