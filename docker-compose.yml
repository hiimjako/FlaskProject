version: "3.8"

services:
  flask-app:
    container_name: flask-app
    build:
      dockerfile: ./Dockerfile
      context: .
    # ports:
    #   - "5000:5000"
    expose:
      - 5000
    volumes:
      - ./:/app
    env_file:
      - .env
    environment:
      - FLASK_ENV=production
    depends_on:
      - flask-db
      - flask-redis
    restart: unless-stopped

  nginx:
    image: nginx:1.15-alpine
    container_name: nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./OpenDrive/static:/var/www/html/static
      - opendrive-certs/conf:/etc/letsencrypt
      - opendrive-certs/www:/var/www/certbot
      - ./nginx:/etc/nginx/conf.d
    depends_on:
      - flask-app
    command: '/bin/sh -c ''while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g "daemon off;"'''

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - opendrive-certs/conf:/etc/letsencrypt
      - opendrive-certs/www:/var/www/certbot
    depends_on:
      - nginx
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

  flask-db:
    container_name: flask-db
    hostname: flask-db.docker
    image: postgres:13-alpine
    restart: unless-stopped
    ports:
      - 5432:5432
    env_file:
      - .env
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - flask-db-data:/var/lib/postgresql/data/pgdata

  worker:
    container_name: flask-worker
    restart: unless-stopped
    build:
      dockerfile: Dockerfile.worker
      context: .
    env_file:
      - .env
    volumes:
      - "./:/app"

  flask-redis:
    container_name: flask-redis
    hostname: flask-redis.docker
    restart: unless-stopped
    build:
      dockerfile: Dockerfile.redis
      context: .
    ports:
      - 6379:6379
    env_file:
      - .env

volumes:
  flask-db-data:
    name: flask-db-data
  opendrive-static:
    driver: local
    driver_opts:
      type: "none"
      o: "bind"
      device: "./OpenDrive/static"
  opendrive-certs:
    driver: local
    driver_opts:
      type: "none"
      o: "bind"
      device: "./nginx/cert"
  opendrive-nginx:
    driver: local
    driver_opts:
      type: "none"
      o: "bind"
      device: "./nginx/opendrive.conf"

networks:
  default:
    external: true
    name: nginx-network
